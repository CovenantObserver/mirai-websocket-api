import java.nio.file.Files

/*
 * Copyright (c) 2018-2020 Karlatemp. All rights reserved.
 * @author Karlatemp <karlatemp@vip.qq.com> <https://github.com/Karlatemp>
 * @create 2020/10/01 15:01:38
 *
 * mirai-websocket-api/build.gradle
 */

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.10'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'org.jetbrains.kotlin.kapt' version '1.4.0'
}

group 'io.github.karlatemp.mirai'
version project.property("wsapi.version")

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

static kotlinx(id) {
    "org.jetbrains.kotlinx:kotlinx-$id:0.1.16"
}

static ktor(id) {
    return "io.ktor:ktor-$id:1.4.0"
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    def miraiConsoleVersion = project.property('mirai.console.version')

    compileOnly("net.mamoe:mirai-core:1.3.2")
    compileOnly("net.mamoe:mirai-console:$miraiConsoleVersion")
    testCompile("net.mamoe:mirai-core:1.3.2")
    testCompile("net.mamoe:mirai-console:$miraiConsoleVersion")
    testCompile("net.mamoe:mirai-console-terminal:$miraiConsoleVersion")

    def autoService = '1.0-rc7'
    kapt "com.google.auto.service:auto-service:$autoService"
    compileOnly "com.google.auto.service:auto-service-annotations:$autoService"

    api(ktor("server-cio"))
    api(ktor("http-jvm"))
    api(ktor("websockets"))
    implementation(ktor("server-core"))
    implementation(ktor("http"))
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.0.0-RC"
}

shadowJar {
    dependencyFilter.exclude {
        return [
                'org.jetbrains.kotlin',
                'org.jetbrains.kotlinx',
                'org.slf4j'
        ].contains(it.moduleGroup)
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ['-Xopt-in=kotlin.RequiresOptIn',
                             '-Xjvm-default=enable']
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ['-Xopt-in=kotlin.RequiresOptIn',
                             '-Xjvm-default=enable']
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        expand([
                'project': [
                        'version': project.version
                ]
        ])
        include 'miraiwsapi.properties'
    }
}

task releaseCiJar() {
    dependsOn(shadowJar)
    doFirst {
        def file = shadowJar.archiveFile.get().asFile
        def target = rootProject.file("build/ci")
        target.mkdirs()
        def targetFile = new File(target, "wsapi.jar")
        targetFile.delete()
        file.withInputStream { stream ->
            Files.copy(stream, targetFile.toPath())
        }
    }
}
